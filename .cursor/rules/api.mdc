---
description: API
alwaysApply: false
---

# 📚 图床项目 API 文档

本文档描述 **图床后端服务** 的 RESTful API，负责图片上传、存储、标签管理、搜索等核心功能。

## 图床后端服务 API

### A. 图片管理 (Image Management)

#### 1\. 上传图片

| 方法 | 路径 | 描述 |
| :--- | :--- | :--- |
| `POST` | `/images/upload` | 上传图片文件，可选添加描述，返回图片 URL。 |

| 参数 | 位置 | 类型 | 描述 | 必填 |
| :--- | :--- | :--- | :--- | :--- |
| `file` | Body (FormData) | File | 要上传的图片文件。 | 是 |
| `description` | Body (FormData) | String | 图片描述信息。 | 否 |

**成功响应 (201 Created):**

```json
{
  "code": 201,
  "message": "Upload successful",
  "data": {
    "image_id": "img_a1b2c3d4",
    "url": "https://cdn.your-imagehost.com/a1b2c3d4.jpg",
    "hash": "e6884675b87...",
    "description": "美丽的风景照片"
  }
}
```

#### 2\. 列出所有图片

| 方法 | 路径 | 描述 |
| :--- | :--- | :--- |
| `GET` | `/images` | 获取所有图片列表，支持分页。 |

| 参数 | 位置 | 类型 | 描述 | 必填 |
| :--- | :--- | :--- | :--- | :--- |
| `page` | Query | Integer | 页码（从 1 开始）。 | 否 (默认 1) |
| `limit` | Query | Integer | 每页数量。 | 否 (默认 20) |
| `sort` | Query | String | 排序方式：`date_desc` (最新优先) 或 `date_asc` (最旧优先)。 | 否 (默认 date_desc) |

**成功响应 (200 OK):**

```json
{
  "code": 200,
  "message": "Success",
  "data": {
    "total": 150,
    "current_page": 1,
    "images": [
      {
        "id": "img_a1b2c3d4",
        "url": "https://cdn.your-imagehost.com/a1b2c3d4.jpg",
        "description": "美丽的风景照片",
        "upload_date": "2025-10-26T12:00:00Z",
        "tags": ["风景", "自然"]
      }
    ]
  }
}
```

#### 3\. 获取图片详情

| 方法 | 路径 | 描述 |
| :--- | :--- | :--- |
| `GET` | `/images/{image_id}` | 获取单张图片的完整信息，包括 URL、描述、标签等元数据。 |

**成功响应 (200 OK):**

```json
{
  "code": 200,
  "message": "Success",
  "data": {
    "image_id": "img_a1b2c3d4",
    "url": "https://cdn.your-imagehost.com/a1b2c3d4.jpg",
    "hash": "e6884675b87...",
    "description": "美丽的风景照片",
    "upload_date": "2025-10-26T12:00:00Z",
    "tags": ["风景", "自然"]
  }
}
```

#### 4\. 更新图片描述

| 方法 | 路径 | 描述 |
| :--- | :--- | :--- |
| `PUT` | `/images/{image_id}` | 更新图片的描述信息。 |

| 参数 | 位置 | 类型 | 描述 | 必填 |
| :--- | :--- | :--- | :--- | :--- |
| `description` | Body | String | 新的图片描述。 | 是 |

**成功响应 (200 OK):**

```json
{
  "code": 200,
  "message": "Description updated successfully"
}
```

#### 5\. 删除图片

| 方法 | 路径 | 描述 |
| :--- | :--- | :--- |
| `DELETE` | `/images/{image_id}` | 根据 ID 删除图片（软删除）。 |

**成功响应 (200 OK):**

```json
{
  "code": 200,
  "message": "Image deleted successfully"
}
```

### B. 标签管理与查询 (Tag Management & Query)

#### 6\. 给图片打标签

| 方法 | 路径 | 描述 |
| :--- | :--- | :--- |
| `PUT` | `/images/{image_id}/tags` | 更新图片的标签。 |

| 参数 | 位置 | 类型 | 描述 | 必填 |
| :--- | :--- | :--- | :--- | :--- |
| `tags` | Body | String Array | 新的标签列表。 | 是 |
| `mode` | Body | String | **'set'** (替换所有标签) 或 **'append'** (追加新标签)。 | 否 (默认'set') |

#### 7\. 列出所有标签

| 方法 | 路径 | 描述 |
| :--- | :--- | :--- |
| `GET` | `/tags` | 获取所有已用标签列表。 **(分页必须)** |

| 参数 | 位置 | 类型 | 描述 | 必填 |
| :--- | :--- | :--- | :--- | :--- |
| `page` | Query | Integer | 页码 (从 1 开始)。 | 否 (默认 1) |
| `limit` | Query | Integer | 每页数量。 | 否 (默认 50) |

**成功响应:**

```json
{
  "code": 200,
  "message": "Success",
  "data": {
    "total": 1250,
    "current_page": 1,
    "tags": [
      {"name": "风景", "count": 520}, 
      {"name": "猫咪", "count": 480}, 
      {"name": "艺术", "count": 300}
    ]
  }
}
```

#### 8\. 精确搜索（AND 逻辑）

| 方法 | 路径 | 描述 |
| :--- | :--- | :--- |
| `GET` | `/search/exact` | 严格 AND 搜索，只返回同时包含所有指定标签的图片。 |

| 参数 | 位置 | 类型 | 描述 | 必填 |
| :--- | :--- | :--- | :--- | :--- |
| `tags` | Query | String Array | 必须包含的标签列表 (e.g., `tags=cat,cute`)。 | 是 |
| `page`, `limit` | Query | Integer | 分页参数。 | 否 |

**成功响应:**

```json
{
  "code": 200,
  "message": "Success",
  "data": {
    "total": 150,
    "current_page": 1,
    "results": [
      {
        "id": "img_x1y2z3a4",
        "url": "https://cdn.your-imagehost.com/x1y2z3a4.jpg",
        "description": "美丽的山川风景",
        "tags": ["风景", "自然", "山川"]
      }
    ]
  }
}
```

#### 9\. 相关性搜索（OR 逻辑）

| 方法 | 路径 | 描述 |
| :--- | :--- | :--- |
| `GET` | `/search/relevance` | OR 逻辑搜索，返回包含任一标签的图片，按匹配标签数降序排列。 |

| 参数 | 位置 | 类型 | 描述 | 必填 |
| :--- | :--- | :--- | :--- | :--- |
| `tags` | Query | String Array | 标签列表 (e.g., `tags=cat,cute`)。 | 是 |
| `page`, `limit` | Query | Integer | 分页参数。 | 否 |

**成功响应:**

```json
{
  "code": 200,
  "message": "Success",
  "data": {
    "total": 520,
    "current_page": 1,
    "results": [
      {
        "id": "img_x1y2z3a4",
        "url": "https://cdn.your-imagehost.com/x1y2z3a4.jpg",
        "description": "可爱的猫咪",
        "matched_tag_count": 3,
        "tags": ["cat", "cute", "pet"]
      },
      {
        "id": "img_b5c6d7e8",
        "url": "https://cdn.your-imagehost.com/b5c6d7e8.jpg",
        "description": "动物照片",
        "matched_tag_count": 2,
        "tags": ["cat", "animal"]
      }
    ]
  }
}
```
