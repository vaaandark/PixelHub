---
description: API
alwaysApply: false
---

# 📚 图床项目 API 文档

本 API 文档分为两个主要服务：**图床后端服务**（负责数据持久化、管理、精确查询）和 **MCP 服务**（负责外部工具/LLM 的数据检索代理）。

## I. 图床后端服务 (Image Hosting Backend)

### A. 图片管理 (Image Management)

#### 1\. 上传图片

| 方法 | 路径 | 描述 |
| :--- | :--- | :--- |
| `POST` | `/images/upload` | 上传图片文件，返回下载 URL。 |

| 参数 | 位置 | 类型 | 描述 | 必填 |
| :--- | :--- | :--- | :--- | :--- |
| `file` | Body (FormData) | File | 要上传的图片文件。 | 是 |

**成功响应 (201 Created):**

```json
{
  "code": 201,
  "message": "Upload successful",
  "data": {
    "image_id": "img_a1b2c3d4",
    "url": "https://cdn.your-imagehost.com/a1b2c3d4.jpg",
    "hash": "e6884675b87..." 
  }
}
```

#### 2\. 删除图片

| 方法 | 路径 | 描述 |
| :--- | :--- | :--- |
| `DELETE` | `/images/{image_id}` | 根据 ID 删除图片（建议软删除）。 |

#### 3\. 获取图片详情

| 方法 | 路径 | 描述 |
| :--- | :--- | :--- |
| `GET` | `/images/{image_id}` | 获取图片元数据和当前标签。 |

### B. 标签管理与查询 (Tag Management & Query)

#### 6\. 给图片打标签

| 方法 | 路径 | 描述 |
| :--- | :--- | :--- |
| `PUT` | `/images/{image_id}/tags` | 更新图片的标签。 |

| 参数 | 位置 | 类型 | 描述 | 必填 |
| :--- | :--- | :--- | :--- | :--- |
| `tags` | Body | String Array | 新的标签列表。 | 是 |
| `mode` | Body | String | **'set'** (替换所有标签) 或 **'append'** (追加新标签)。 | 否 (默认'set') |

#### 7\. 列出所有标签

| 方法 | 路径 | 描述 |
| :--- | :--- | :--- |
| `GET` | `/tags` | 获取所有已用标签列表。 **(分页必须)** |

| 参数 | 位置 | 类型 | 描述 | 必填 |
| :--- | :--- | :--- | :--- | :--- |
| `page` | Query | Integer | 页码 (从 1 开始)。 | 否 (默认 1) |
| `limit` | Query | Integer | 每页数量。 | 否 (默认 50) |

**成功响应:**

```json
{
  "code": 200,
  "message": "Success",
  "data": {
    "total": 1250,
    "current_page": 1,
    "tags": [
      {"name": "风景", "count": 520}, 
      {"name": "猫咪", "count": 480}, 
      {"name": "艺术", "count": 300}
    ]
  }
}
```

#### 8\. 查询（精确匹配 AND）

| 方法 | 路径 | 描述 |
| :--- | :--- | :--- |
| `GET` | `/search/exact` | 严格 AND 搜索，只返回同时包含所有指定标签的图片。 |

| 参数 | 位置 | 类型 | 描述 | 必填 |
| :--- | :--- | :--- | :--- | :--- |
| `tags` | Query | String Array | 必须包含的标签列表 (e.g., `tags=cat,cute`)。 | 是 |
| `page`, `limit` | Query | Integer | 分页参数。 | 否 |

-----

## II. MCP 服务 (Model Context Protocol Service)

**基础 URL：** `https://api.your-imagehost.com/mcp/v1`

**用途：** 供外部 LLM 或 AI 框架通过 Tool/Function Calling 机制调用，进行数据检索。

### 鉴权 (Authentication)

使用 **API Key** 或 **特定服务 Token** 进行认证，确保只有授权的 AI 服务可以访问。

#### 1\. 列出所有标签 (标签上下文获取)

| 方法 | 路径 | 描述 |
| :--- | :--- | :--- |
| `GET` | `/tags` | 代理图床后端接口 (7)，供 LLM 获取可用标签上下文。 |

| 参数 | 位置 | 类型 | 描述 | 必填 |
| :--- | :--- | :--- | :--- | :--- |
| `page`, `limit` | Query | Integer | 分页参数。 | 否 |

**成功响应:** (与图床接口 (7) 类似，但结构更简洁，便于 LLM 解析)

```json
{
  "tags": ["风景", "猫咪", "艺术", "食物", "抽象", "..."],
  "total": 1250,
  "has_more": true 
}
```

#### 2\. 多标签查找（相关性排序）

| 方法 | 路径 | 描述 |
| :--- | :--- | :--- |
| `GET` | `/search/relevance` | 代理图床后端接口 (6)，返回按匹配标签数降序排列的图片。 |

| 参数 | 位置 | 类型 | 描述 | 必填 |
| :--- | :--- | :--- | :--- | :--- |
| `tags` | Query | String Array | 要搜索的标签列表 (OR 逻辑)。 | 是 |
| `page`, `limit` | Query | Integer | 分页参数。 | 否 |

**成功响应:**

```json
{
  "total": 520,
  "results": [
    {
      "image_id": "img_x1y2z3a4",
      "url": "https://cdn.your-imagehost.com/x1y2z3a4.jpg",
      "matched_tag_count": 3,
      "tags": ["cat", "cute", "pet"] 
    },
    {
      "image_id": "img_b5c6d7e8",
      "url": "https://cdn.your-imagehost.com/b5c6d7e8.jpg",
      "matched_tag_count": 2,
      "tags": ["cat", "animal"] 
    }
    // ... more results
  ]
}
```
